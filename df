[1mdiff --git a/spec/factories/devise.rb b/spec/factories/devise.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..ceef63b[m
[1m--- /dev/null[m
[1m+++ b/spec/factories/devise.rb[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mFactoryBot.define do[m
[32m+[m[32m    factory :user do[m
[32m+[m[32m      email {"test@user.com"}[m
[32m+[m[32m      password {"qwerty"}[m
[32m+[m[32m      # Add additional fields as required via your User model[m
[32m+[m[32m    end[m
\ No newline at end of file[m
[1mdiff --git a/spec/features/home_page_spec.rb b/spec/features/home_page_spec.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..14be7a1[m
[1m--- /dev/null[m
[1m+++ b/spec/features/home_page_spec.rb[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mrequire "rails_helper"[m
[32m+[m
[32m+[m[32m# Homepage / rootpage should show animal finder[m
[32m+[m[32mRSpec.feature "Visiting the homepage", type: :feature do[m
[32m+[m[32m  scenario "The visitor should see animal finder" do[m
[32m+[m[32m    visit root_path[m
[32m+[m[32m    expect(page).to have_text("Animal Finder")[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/spec/helpers/animal_finder_helper_spec.rb b/spec/helpers/animal_finder_helper_spec.rb[m
[1mindex 63b445e..3f7a8ba 100644[m
[1m--- a/spec/helpers/animal_finder_helper_spec.rb[m
[1m+++ b/spec/helpers/animal_finder_helper_spec.rb[m
[36m@@ -1,5 +1,4 @@[m
 require 'rails_helper'[m
[31m-require 'selenium-webdriver'[m
 [m
 # Specs in this file have access to a helper object that includes[m
 # the AnimalFinderHelper. For example:[m
[1mdiff --git a/spec/rails_helper.rb b/spec/rails_helper.rb[m
[1mindex 3878e8d..af60829 100644[m
[1m--- a/spec/rails_helper.rb[m
[1m+++ b/spec/rails_helper.rb[m
[36m@@ -1,5 +1,3 @@[m
[31m-require 'simplecov'[m
[31m-SimpleCov.start[m
 [m
 # This file is copied to spec/ when you run 'rails generate rspec:install'[m
 require 'spec_helper'[m
[36m@@ -12,6 +10,9 @@[m [mrequire 'rspec/rails'[m
 require 'devise'[m
 require_relative 'support/controller_macros' # or require_relative './controller_macros' if write in `spec/support/devise.rb`[m
 require_relative 'support/factory_bot.rb'[m
[32m+[m
[32m+[m
[32m+[m[32mDir[Rails.root.join('spec', 'support', '**', '*.rb')].each { |f| require f }[m
 # Add additional requires below this line. Rails is not loaded until this point![m
 [m
 # Requires supporting ruby files with custom matchers and macros, etc, in[m
[36m@@ -44,7 +45,7 @@[m [mRSpec.configure do |config|[m
   # If you're not using ActiveRecord, or you'd prefer not to run each of your[m
   # examples within a transaction, remove the following line or assign false[m
   # instead of true.[m
[31m-  config.use_transactional_fixtures = false[m
[32m+[m[32m  config.use_transactional_fixtures = true[m
 [m
   # You can uncomment this line to turn off ActiveRecord support entirely.[m
   # config.use_active_record = false[m
[36m@@ -77,6 +78,19 @@[m [mRSpec.configure do |config|[m
   config.include Devise::Test::ControllerHelpers, type: :controller[m
   config.include Devise::Test::ControllerHelpers, :type => :controller[m
   config.include Devise::Test::IntegrationHelpers, type: :request[m
[32m+[m[32m  config.include Devise::Test::IntegrationHelpers, :type => :feature[m
   config.extend ControllerMacros, :type => :controller[m
[31m-  config.include Warden::Test::Helpers[m
[32m+[m[32m  config.include FactoryBot::Syntax::Methodsend[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m# Adds coverage to rspec[m
[32m+[m[32mrequire 'simplecov'[m
[32m+[m[32mSimpleCov.start 'rails' do[m
[32m+[m[32m  add_filter '/bin/'[m
[32m+[m[32m  add_filter '/db/'[m
[32m+[m[32m  add_filter '/spec/' # for rspec[m
[32m+[m[32m  filters.clear# This will remove the :root_filter and :bundler_filter that come via simplecov's defaults[m
[32m+[m[32m  add_filter do |src|[m
[32m+[m[32m  !(src.filename =~ /^#{SimpleCov.root}/) unless src.filename =~ /my_engine/[m
[32m+[m[32mend[m
 end[m
[1mdiff --git a/spec/support/controller_macros.rb b/spec/support/controller_macros.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..88c64c9[m
[1m--- /dev/null[m
[1m+++ b/spec/support/controller_macros.rb[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mmodule ControllerMacros[m
[32m+[m[32m    def login_user[m
[32m+[m[32m      # Before each test, create and login the user[m
[32m+[m[32m      before(:each) do[m
[32m+[m[32m        @request.env["devise.mapping"] = Devise.mappings[:user][m
[32m+[m[32m        user = FactoryBot.create(:user)[m
[32m+[m[32m        # user.confirm! # Or set a confirmed_at inside the factory. Only necessary if you are using the "confirmable" module[m
[32m+[m[32m        sign_in user[m
[32m+[m[32m      end[m
[32m+[m[32m    end[m
[32m+[m[41m  [m
[32m+[m
[32m+[m[32m  end[m
\ No newline at end of file[m
